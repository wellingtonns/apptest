name: Build and Deploy App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: welignton/apptest

    steps:
      # ðŸ”¹ Clona o repositÃ³rio
      - name: Checkout
        uses: actions/checkout@v3

      # ðŸ”¹ Login no Docker Hub
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ðŸ”¹ Define a TAG curta do commit
      - name: Definir TAG
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      # ðŸ”¹ Build da imagem
      - name: Build da imagem Docker
        run: |
          docker build -t $IMAGE_NAME:${TAG} .
          docker tag $IMAGE_NAME:${TAG} $IMAGE_NAME:latest

      # ðŸ”¹ Push da imagem
      - name: Push da imagem Docker
        run: |
          docker push $IMAGE_NAME:${TAG}
          docker push $IMAGE_NAME:latest

      # ðŸ”¹ Atualiza o YAML com nova tag
      - name: Atualizar deployment.yaml
        run: |
          sed -i "s|image: $IMAGE_NAME.*|image: $IMAGE_NAME:${TAG}|g" manifestos/deployment.yaml

      # ðŸ”¹ Faz commit e push da atualizaÃ§Ã£o
      - name: Commit e Push
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/wellingtonns/apptest.git
          git add manifestos/deployment.yaml
          git commit -m "Atualiza imagem para ${TAG}" || echo "Nenhuma alteraÃ§Ã£o para commit"
          git push origin HEAD

      - name: Instala Argo CD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/argocd

        
      - name: ArgoCD Sync
        run: |
          argocd app sync apptest --auth-token ${{ secrets.ARGOCD_AUTH_TOKEN }} --server ${{ secrets.ARGOCD_SERVER }}
        env:
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}